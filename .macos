#!/usr/bin/env bash

# ~/.macos — https://mths.be/macos
# Run without downloading:
# curl https://raw.githubusercontent.com/owinter86/dotfiles/HEAD/.macos | bash

# Close any open System Preferences panes, to prevent them from overriding
# settings we’re about to change
osascript -e 'tell application "System Preferences" to quit'

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

###############################################################################
# Olivers's Customizations                                                       #
###############################################################################

echo "Hello $(whoami)! Let's get you set up."
# Git credentials
GIT_AUTHOR_NAME="Oliver Winter"
GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME"
git config --global user.name "$GIT_AUTHOR_NAME"
GIT_AUTHOR_EMAIL="owinter86@gmail.com"
GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL"
git config --global user.email "$GIT_AUTHOR_EMAIL"

echo "mkdir -p ${HOME}/code"
mkdir -p "${HOME}/code"


echo "installing node (via n-install)"
curl -L https://bit.ly/n-install | bash
echo "installing node (via n-install)"
n install 20

echo "node --version: $(node --version)"
echo "npm --version: $(npm --version)"

echo "installing ohmyzsh"
curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | sh /dev/stdin --unattended

echo "installing homebrew"
# install homebrew https://brew.sh
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" </dev/null

echo '# Set PATH, MANPATH, etc., for Homebrew.' >> ~/.zprofile
echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
eval "$(/opt/homebrew/bin/brew shellenv)"

echo "brew installing stuff"
brew install watchman n xcbeautify

echo "installing apps with brew --cask"
brew tap homebrew/cask-versions
brew tap homebrew/cask-fonts

brew install --cask google-chrome iterm2 android-studio fork \
  visual-studio-code 1password slack vlc spotify xcodes figma \
  codewhisperer font-hack-nerd-font expo-orbit \
  devcleaner proxyman logi-options-plus steam

echo "Generating a new SSH key for GitHub"
ssh-keygen -t ed25519 -C "owinter86@gmail.com" -f ~/.ssh/id_ed25519
eval "$(ssh-agent -s)"
touch ~/.ssh/config
echo "Host *\n AddKeysToAgent yes\n UseKeychain yes\n IdentityFile ~/.ssh/id_ed25519" | tee ~/.ssh/config
ssh-add -K ~/.ssh/id_ed25519
echo "run 'pbcopy < ~/.ssh/id_ed25519.pub' and paste that into GitHub"

echo "making system modifications:"

###############################################################################
# Trackpad, mouse, keyboard, Bluetooth accessories, and input                 #
###############################################################################

# Disable "natural" scrolling.
defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false

# Always open new documents in tabs.
defaults write NSGlobalDomain AppleWindowTabbingMode always


###############################################################################
# Screen                                                                      #
###############################################################################

# Save screenshots to the desktop
defaults write com.apple.screencapture location -string "${HOME}/Documents/Screenshots"
# Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
defaults write com.apple.screencapture type -string "png"


###############################################################################
# Finder                                                                      #
###############################################################################

defaults write com.apple.finder AppleShowAllFiles -bool true                 # Show hidden files.
defaults write NSGlobalDomain AppleShowAllExtensions -bool true              # Show all file extensions.
defaults write com.apple.finder FXEnableExtensionsChangeWarning -bool false  # Disable file extension change warning.
defaults write com.apple.finder ShowStatusBar -bool true                     # Show status bar.
defaults write com.apple.finder ShowPathbar -bool true                       # Show path bar.
defaults write com.apple.finder ShowRecentTags -bool false                   # Hide tags in sidebar.
defaults write com.apple.finder QuitMenuItem -bool true                      # Allow quitting finder via ⌘ + Q.

###############################################################################
# Dock, Dashboard, and hot corners                                            #
###############################################################################
set -e

defaults write com.apple.dock autohide -bool true       # Autohide dock.
defaults write com.apple.dock tilesize -int 64          # Set dock icon size.
defaults write com.apple.dock magnification -bool true  # Enable dock magnification.
defaults write com.apple.dock largesize -int 96         # Set dock magnificated icon size.
defaults write com.apple.dock show-recents -bool false  # Disable recent apps in dock
defaults write NSGlobalDomain AppleInterfaceStyle Dark  # Use dark menu bar and dock.
defaults write com.apple.dock \
               persistent-apps -array "$(__dock_item /Applications/Utilities/Activity\ Monitor.app)" \
                                      "$(__dock_item /Applications/Utilities/Settings.app)" \
                                      "$(__dock_item /Applications/Google\ Chrome.app)" \
                                      "$(__dock_item /Applications/Xcodes.app)" \
                                      "$(__dock_item /Applications/Spotify.app)" \
                                      "$(__dock_item /Applications/Fork.app)" \
                                      "$(__dock_item /Applications/Slack.app)" \
                                      "$(__dock_item /Applications/iTerm.app)" \
                                      "$(__dock_item /Applications/Figma.app)" \
                                      "$(__dock_item /Applications/Android\ Studio.app)" \
                                      "$(__dock_item /Applications/Visual\ Studio\ Code.app)" \
                                      "$(__dock_item /Applications/Google\ Chrome.app)"

killall Dock

# Add iOS & Watch Simulator to Launchpad
sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Applications/Simulator.app" "/Applications/Simulator.app"
# sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Applications/Simulator (Watch).app" "/Applications/Simulator (Watch).app"

###############################################################################
# Terminal & iTerm 2                                                          #
###############################################################################

# Don’t display the annoying prompt when quitting iTerm
defaults write com.googlecode.iterm2 PromptOnQuit -bool false

# Specify the preferences directory
defaults write com.googlecode.iterm2.plist PrefsCustomFolder -string "${HOME}/Library/Mobile\ Documents/com~apple~CloudDocs/dotfiles/iterm2"
# Tell iTerm2 to use the custom preferences in the directory
defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true


echo "Done. Note that some of these changes require a logout/restart to take effect."